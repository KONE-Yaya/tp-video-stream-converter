################################################################################
#		Infos et notions du cloud et les microservices                 #
################################################################################

1- API Gateway ou API Management

==>(Voir la vidéo ci-dessous de 4min pour comprendre le principe)
https://www.youtube.com/watch?v=x6oPMfWG9RA

2- Notion de Cloud(Cloud patterns)

Le cloud doit traiter les points suivants:

• Configuration externalisée(Externalized configuration)

• Découverte du service et inscription(Service discovery and registration)
  ==> lien suivant pour comprendre le point ci-dessus
  https://auth0.com/blog/an-introduction-to-microservices-part-3-the-service-registry/
  Serveur-side discovery ou encore la découverte côté serveur permet à l'API Management de gérer la découverte du bon endpoint (endpoints) pour une requête.

• Disjoncteur (Circuit Breaker)
Le disjoncteur est utilisé pour détecter les pannes et encapsule la logique 
d'empêcher une panne de se reproduire constamment, 
pendant la maintenance, une panne temporaire du système externe ou 
des difficultés système inattendues.
  ==> liens suivants pour comprendre le point ci-dessus
https://www.baeldung.com/spring-cloud-circuit-breaker
https://medium.com/bliblidotcom-techblog/resilience4j-circuit-breaker-implementation-on-spring-boot-9f8d195a49e0

• Base de données par service(Database per service)

• API gateway ou API Management

• CQRS(Command and Query Responsibility Segregation)
   ==> lien suivant pour comprendre le point ci-dessus
https://medium.com/tiller-systems/pourquoi-avoir-choisi-dutiliser-l-architecture-cqrs-e04c082f8b5f

• Event sourcing(Sourcing événementiel)
   ==> liens suivants pour comprendre le point ci-dessus
https://microservices.io/patterns/data/event-sourcing.html

• Log aggregation(Agrégation de journaux)
   ==> lien suivant pour comprendre le point ci-dessus
https://auth0.com/blog/spring-boot-logs-aggregation-and-monitoring-using-elk-stack/

• Distributed tracing(Traçage distribué)

• Audit logging(Journalisation des audits)

• Application metrics(Métriques d'application)
   ==> lien suivant pour comprendre le point ci-dessus
https://blog.zenika.com/2015/07/13/metriques-de-web-services-rest-avec-spring-boot/

• Health check API(vérification d'état d'API)


################################################################################
#		Infos pour les dépendances avec Spring boot                    #
################################################################################

• Externalized configuration : Config Server
• Service Discovery and Registration : Eureka Server
• Distributed tracing : Zipkin
• Health check API : Actuator
• Circuit Breaker : Hystrix
• API Gateway : Zuul
• Log aggregation and analysis : ELK Stack



